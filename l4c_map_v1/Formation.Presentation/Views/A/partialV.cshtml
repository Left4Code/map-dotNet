@{
    ViewBag.Title = "Index";
}
<link rel="stylesheet" type="text/css" href="~/Content/easypiechart.css">
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<div id="stat" class="container">
    @foreach (var res in (List<KeyValuePair<Presentation.Models.RessourceVM, double>>)ViewBag.listOfPair)
    {   
        <div class="box" style="background-color: #e6e6ff; @Html.Raw(res.Value < 50 ? "background-color:#ffffe6" : "")" >
            <a href="@Url.Action("PdfTest", "Pdf",new {id =@res.Key.id })" target="_blank">View Report</a>
            <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
            <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
            <div class="chart" data-percent="@res.Value" onclick="clickbtn(@res.Key.id)">@res.Value<span>%</span> 
            
            </div>
            <h2>@res.Key.LastName</h2>
        </div>

    }
</div>

<!--<div class="container">
     <div class="box">
         <div class="chart" data-percent="@ViewBag.count">73%</div>
         <h2>aa</h2>
     </div>
     <div class="box">
         <div class="chart" data-percent="@ViewBag.count">73%</div>
         <h2>aa</h2>
     </div>
 </div>
 <input type="button" class="updatePieCharts" value="updatePieCharts" />
 -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script src="~/Scripts/jquery.easypiechart.js"></script>
<script>
        $(function () {
            $('.chart').easyPieChart({
                // The color of the curcular bar. You can pass either a css valid color string like rgb, rgba hex or string colors. But you can also pass a function that accepts the current percentage as a value to return a dynamically generated color.
                barColor: '#17d3e6',
                // The color of the track for the bar, false to disable rendering.
                trackColor: '#373737',
                // The color of the scale lines, false to disable rendering.
                scaleColor: false,
                // Defines how the ending of the bar line looks like. Possible values are: butt, round and square.
                lineCap: 'round',
                // Width of the bar line in px.
                lineWidth: 20,
                // Size of the pie chart in px. It will always be a square.
                size: 180,
                // Time in milliseconds for a eased animation of the bar growing, or false to deactivate.
                animate: 3000,
                // Callback function that is called at the start of any animation (only if animate is not false).
                onStart: $.noop,
                // Callback function that is called at the end of any animation (only if animate is not false).
                onStop: $.noop
            });
            $('.updatePieCharts').on('click', function (e) {
                e.preventDefault();
                var newValue = Math.floor(100 * Math.random());
                $('.chart').data('easyPieChart').update(newValue);
                $('span', $('.chart')).text(newValue);
            });
        });

</script>


<script>
    function clickbtn($r) {
    $.ajax({
        url: '@Url.Action("ActivityRatioWebService", "Test")',
        data: { id: $r },
        type: 'POST',
        success: function (data) {
            //$("#d").html('<span>ff</span>');
            $(".content").html(data);

           // $("#divContent").attr('id', 'a');
            console.log('hh');
            console.log(data);
        }
    });
}
</script>

